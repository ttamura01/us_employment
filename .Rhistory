intercept_rounded <- round(intercept,2)
slope_rounded <- round(slope,2)
##implied mortgage rate
theoritical_mortgage_rate <- slope*latest_TB_rate + intercept
theoritical_data <- tribble(~mortgage30, ~treasury10,
theoritical_mortgage_rate, latest_TB_rate)
theoritical_mortgage_rate_rounded <- round(theoritical_mortgage_rate,2)
#R-squared value
r2 <- summary(lm_model)$r.squared
r2_rounded <- round(r2,2)
#start_year
start_year <- rates %>%
head(1) %>%
separate(date, into = c("year", "month", "day")) %>%
select(year)
rates %>%
ggplot(aes(x = treasury10, y = mortgage30)) +
geom_point(alpha = 0.2) +
geom_smooth(method = "lm", color = "blue") +
geom_vline(xintercept = annotation$treasury10, linetype = "dashed", color = "blue") +
geom_hline(yintercept = annotation$mortgage30, linetype = "dashed") +
geom_hline(yintercept = slope*annotation$treasury10 + intercept, linetype = "dashed",
color = "red" ) +
geom_point(data = annotation, aes(x = treasury10, y = mortgage30), color = "green",
size = 3) +
geom_point(data = theoritical_data, aes(x= treasury10,theoritical_mortgage_rate),
color = "red",
size=3) +
annotate("text", x = latest_data$treasury10, y = theoritical_mortgage_rate,
label = glue("TheoriticalRate:
{theoritical_mortgage_rate_rounded}%"),
hjust = -0.1, vjust = 1.25, color = "black", size = 5)  +
labs(title = glue("Implied 30-Year Fixed Mortgage Rate is {theoritical_mortgage_rate_rounded}%,
vs. Current at {latest_data$mortgage30}%"),
subtitle = glue("<i>(y = {slope_rounded}X + {intercept_rounded}, R2 = {r2_rounded}, based on regression analysis since {start_year})"),
caption = "Source: FRED(Federal Reserve Economic Data by St.Louis FED), WSJ",
x="10_Year Treasury Rate (%)",
y="30-Year Fixed Mortgage Rate(%)") +
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(),
plot.subtitle = element_markdown()
)
ggsave("/Users/takayukitamura/Documents/R_Computing/us_rates/figures/implied_30_year_mortgage_2.png", height = 5, width = 5)
setwd("/Users/takayukitamura/Documents/R_Computing/us_rates")
library(tidyverse)
library(glue)
library(ggtext)
library(patchwork)
library(scales)
## download data from csv file
rates <- read.csv("data/us_10y_30y.csv") %>%
select(-X)
## add the rarest data
# data_07112024 <- data.frame("date" = c("2024-06-27", "2024-07-03", "2024-07-11"),
#                             "mortgage30" = c(6.86, 6.95, 6.89),
#                             "treasury10" = c(4.44, 4.36, 4.217))
updates <- tribble(~date, ~mortgage30, ~treasury10,
"2024-06-27", 6.86, 4.44,
"2024-07-03", 6.95, 4.36,
"2024-07-11", 6.89, 4.22,
"2024-07-18", 6.77, 4.20,
"2024-07-25", 6.78, 4.28,
"2024-08-01", 6.73, 4.09,
"2024-08-08", 6.47, 3.98,
"2024-08-13", 6.47, 3.87)
## add the rarest data
# data_07112024 <- data.frame("date" = c("2024-06-27", "2024-07-03", "2024-07-11"),
#                             "mortgage30" = c(6.86, 6.95, 6.89),
#                             "treasury10" = c(4.44, 4.36, 4.217))
updates <- tribble(~date, ~mortgage30, ~treasury10,
"2024-06-27", 6.86, 4.44,
"2024-07-03", 6.95, 4.36,
"2024-07-11", 6.89, 4.22,
"2024-07-18", 6.77, 4.20,
"2024-07-25", 6.78, 4.28,
"2024-08-01", 6.73, 4.09,
"2024-08-08", 6.47, 3.98,
"2024-08-13", 6.47, 3.85)
##Combine the two data
rates <- rbind(rates, updates)
rates$date <- as.Date(rates$date, format = "%Y-%m-%d")
sapply(rates, class)
## Add spread to the data frame
spread <- rates$mortgage30 - rates$treasury10
rates$spread <- spread
head(rates, 10)
tail(rates, 10)
rates %>%
arrange(-spread)
dim(rates)
##understand the data
rates <- rates %>%
filter(date>="1971-01-01")
rates %>%
summarise(minimum = min(spread, round(2)),
median = median(spread, round(2)),
mean = mean(spread, round(2)),
maximum = max(spread, round(2)),
"25th percentile" = quantile(spread,0.25),
"75th percentile" = quantile(spread, 0.75),
sd = sd(spread, round(3)))
##transform the data to longer
long_data <- rates %>%
pivot_longer(cols = -date, names_to = "yield", values_to = "percentage")
##historical yields and spread
long_data %>%
ggplot(aes(x =date, y = percentage, color = yield)) +
geom_line(show.legend = TRUE) +
labs(title = "US 30-year mortgage yield spread over 10-year treasury notes",
caption = "FRED(Federal Reserve Economic Data), WSJ",
x = NULL, y = NULL) +
theme(
legend.key = element_blank(),
legend.title = element_blank()
)
ggsave("figures/us_30y_10y_spread.png", height = 4.5, width = 6)
rates %>%
ggplot(aes(x = date, y = spread))+
geom_line()
rates$latest_data <- ifelse(rates$date == max(rates$date), TRUE, FALSE)
rates %>%
ggplot(aes(x = date, y = spread, color = latest_data, fill = latest_data)) +
geom_col(show.legend = FALSE) +
scale_colour_manual(breaks = c(TRUE, FALSE),
values = c("red", "#AAAAAA")) +
geom_text(data = subset(rates, latest_data == TRUE),
aes(label = glue("{spread}%")), vjust=-.5, hjust = 0.5, color = "red") +
labs(title = "US 30-year mortgage spread over 10-year treasury yield",
x = NULL, y = NULL)
ggsave("figures/historical_spread_latest_data.png", height = 4.5, width = 5)
rates$year <- format(rates$date, "%Y")
sapply(rates, class)
rates$year = as.numeric(rates$year)
rates$period <- cut(rates$year,
breaks = c(1970, 2008, 2009, 2019, 2024),
labels = c("1971-2008", "2009-2019", "2020-2021", "2022-2024"))
d <- ggplot(rates, aes(x = period, y = spread, fill = period)) +
geom_boxplot(show.legend = FALSE) +
# facet_wrap(~period) +
scale_y_continuous(limits = c(-0.5, 6),
breaks = seq(0, 6, 2),
labels = label_comma(accuracy = 0.1)) +
labs(x = NULL,
y = "spread")
d +  labs(title = "30 years mortgage yield spread over 10 years treasuary notes",
subtitle = "The spread widened since 2022, with unwinding of MBS by Fed?",
y = "spread",
x = NULL) +
theme(plot.title.position = "plot",
plot.subtitle = element_text(face = "italic"))
ggsave("boxplots of spread indicating some impacts from Fed's MBS unwinding.png", width = 5, height = 4)
## Add z-score on the data_frame
z_score <- (spread - mean(spread))/sd(spread)
rates$z_score <- z_score
head(rates)
tail(rates)
model <- lm(mortgage30 ~ treasury10, data = rates)
lm(model)
summary(model)
predicted_30y <- predict(model, data.frame(treasury10 = c(4.5)))
attributes(model)
cor(rates$treasury10, rates$mortgage30)
model$coefficients
model$residuals
model$effects
model$rank
model$fitted.values
coefficients(model)
confint(model)
anova(model)
rate_stats <- rates %>%
summarise(
mean_rate = mean(spread),
SD_rate = sd(spread),
med_est = median(spread),
conf_25 = quantile(spread, 0.25),
conf_75 = quantile(spread, 0.75),
conf_low = quantile(spread, 0.025),
conf_high = quantile(spread, 0.975)
)
conf_low <- rate_stats %>%
select(conf_low)
conf_high <- rate_stats %>%
select(conf_high)
latest_spread <- slice_tail(rates)[4]
slice_tail(rates)[4]
e <- ggplot(rates, aes(x = spread)) +
geom_histogram(fill = "steelblue", color = "white", bins = 30, alpha = .3) +
geom_vline(data = rate_stats,
aes(xintercept = mean_rate),
size = 1, color = "red") +
geom_vline(data = rate_stats,
aes(xintercept = mean_rate + SD_rate),
linetype = "dashed", color = "red") +
geom_vline(data = rate_stats,
aes(xintercept = mean_rate - SD_rate),
linetype = "dashed", color = "red") +
geom_vline(data = rate_stats,
aes(xintercept = mean_rate + SD_rate*2),
linetype = "dotted", color = "red") +
geom_vline(data = rate_stats,
aes(xintercept = mean_rate - SD_rate*2),
linetype = "dotted", color = "red") +
scale_x_continuous(limits=c(NA, 4),
breaks = c(0, 4, 2)) +
labs(title = "The 30-year mortgage spread over 10y treasury yield",
subtitle = glue("Current spread at {latest_spread}% is outside of the 95% confidence interval(=2SD)"),
x = "spread(%)",
caption = "Source: FRED(Federal Reserve Economic Data") +
theme_classic() +
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(),
plot.subtitle = element_text(face = "italic"
))
e
# Add labels
z1 <-  round((mean(rates$spread) + sd(rates$spread)),2)
z2 <- round((mean(rates$spread) + sd(rates$spread)*2),2)
z3 <- round((mean(rates$spread) - sd(rates$spread)),2)
z4 <- round((mean(rates$spread) - sd(rates$spread)*2),2)
e + geom_text(aes(x = 1.7, y = 450, label = round(rate_stats$mean_rate, 2))) +
geom_text(aes(x = z1, y = 400, label = z1)) +
geom_text(aes(x = z2, y = 350, label = z2)) +
geom_text(aes(x = z3, y = 400, label = z3)) +
geom_text(aes(x = z4, y = 350, label = z4))
ggsave("30y_mortgage_spread_10TB.png", height = 5, width = 5)
e + geom_text(aes(x = 1.7, y = 470, label = glue("mean = {round(rate_stats$mean_rate, 2)}"))) +
geom_text(aes(x = z1, y = 400, label = glue("mean + SD = {z1}"))) +
geom_text(aes(x = z2, y = 350, label = glue("mean + 2SD = {z2}"))) +
geom_text(aes(x = z3, y = 400, label = glue("mean - SD = {z3}"))) +
geom_text(aes(x = z4, y = 350, label = glue("mean - 2SD = {z4}")))
ggsave("figures/30y_mortgage_spread_10TB.png", height = 5, width = 5)
f <- ggplot(rates, aes(x = spread)) +
geom_histogram(fill = "blue", color = "white") +
geom_rect(data = rate_stats,
aes(
ymin = 0, ymax = Inf,
x = med_est, xmin = conf_low, xmax = conf_high),
alpha = 0.2, fill = "green"
) +
geom_vline(data = rate_stats, aes(
xintercept = med_est),
size = 1, color = "red"
) +
labs(title = "Histogram - how the spread is distributed",
subtitle = glue("95% confidence interval is the stread between {conf_low}% and {conf_high}%"),
caption = "FRED(Federal Reserve Econimic Data"
) +
theme(
plot.title.position = "plot",
plot.subtitle = element_text(face = "italic")
)
f
ggsave("figures/histogram_stread.png", width = 5, height = 5)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(patchwork)
library(ggtext)
library(glue)
setwd("/Users/takayukitamura/Documents/R_Computing/cpi_treasury")
pce <- read.csv("pce.csv") %>%
select(-X)
tail(pce)
updates <- tibble(date=c("2024-04-01", "2024-05-01", "2024-06-01"),
pce=c(2.7, 2.6, 2.5))
pce <- rbind(pce, updates)
pce$date <- as.Date(pce$date)
sapply(pce, class)
pce %>%
ggplot(aes(x = date, y = pce)) +
geom_line()
pce %>%
ggplot(aes(x = date, y = pce)) +
geom_line()
core_pce <- read.csv("core_pce.csv") %>%
select(-X)
tail(core_pce)
updates <- tibble(date=c("2024-04-01", "2024-05-01", "2024-06-01"),
core_pce=c(2.8, 2.6, 2.6))
core_pce <- rbind(core_pce, updates)
core_pce$date <- as.Date(core_pce$date)
head(core_pce)
tail(core_pce)
sapply(core_pce, class)
core_pce %>%
filter(date > "2020-01-01") %>%
ggplot(aes(x = date, y = core_pce)) +
geom_line()
pce_cpce <- merge(pce, core_pce, by = "date")
pce_cpce %>%
filter(date > "2020-01-01") %>%
pivot_longer(cols = -date, names_to = "index", values_to = "inflation") %>%
ggplot(aes(x = date, y = inflation, color = index)) +
geom_line() +
geom_abline(slope = 0, intercept = 2) +
labs(title = "The PCE inflation index eased to 2.6% and Core index to 2.6% in May, from April 2.7& and 2.8%, in-line with market expected",
#subtitle = "Housing & related ccount for 34% in CPI, but only 15% in PCE",
caption = "Source:Department of Commerce",
x = NULL, y = NULL) +
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(vjust = 1.5),
legend.title = element_blank(),
legend.key = element_rect(fill = "white")
)
pce_cpce <- pce_cpce %>%
mutate(pce_monthly_change = c(NA, diff(pce)),
pce_montly_change_status = if_else(is.na(pce_monthly_change), NA_character_,
if_else(pce_monthly_change> 0, "increased",
if_else(pce_monthly_change <0, "eased", "flat")))) %>%
mutate(cpce_monthly_change = c(NA, diff(core_pce)),
cpce_montly_change_status = if_else(is.na(cpce_monthly_change), NA_character_,
if_else(cpce_monthly_change> 0, "increased",
if_else(cpce_monthly_change <0, "eased", "flat"))))
max(pce_cpce$date)
latest_data <- pce_cpce %>%
filter(date == max(date))
sapply(latest_data, class)
latest_data$date <- as.Date(latest_data$date)
latest_month <- latest_data[,1]
class(latest_month)
month_abbr <- format(latest_month, "%b")
latest_pce <- latest_data[,2]
latest_cpce <- latest_data[,3]
latest_pce_status <- latest_data[,5]
latest_cpce_status <- latest_data[,7]
pce_cpce %>%
filter(date >="2015-01-01") %>%
select(date, pce, core_pce) %>%
pivot_longer(cols = -date, names_to = "index", values_to = "inflation") %>%
ggplot(aes(x = date, y = inflation, color = index)) +
geom_line() +
geom_hline(aes(yintercept = 2)) +
labs(title = glue("US inflation {latest_pce_status } in {month_abbr}
(guaged by Personal Consumption Expeditures, which is used as
primary inflation indicator by Fed for their rate decision)
to {latest_pce},
approaching to their target at 2.0%"),
x = NULL, y = "percent",
caption = "Labor Department, FRED") +
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple()
)
ggsave("/Users/takayukitamura/Documents/R_Computing/figures/pce_inflation_2024_05_01.png", width = 6, height = 5)
cpi_ccpi <- read.csv("cpi_ccpi_03_2024.csv") %>%
select(-X)
cpi_ccpi_2024_06_01 <- tibble(date = c("2024-04-01", "2024-05-01", "2024-06-01"),
cpi = c(3.4, 3.3, 3.0),
ccpi = c(3.6, 3.4, 3.3))
cpi_ccpi_2024_06_01
cpi_ccpi <- rbind(cpi_ccpi, cpi_ccpi_2024_06_01)
head(cpi_ccpi)
tail(cpi_ccpi)
cpi_ccpi <- cpi_ccpi %>%
mutate(cpi_monthly_change = c(NA, diff(cpi)),
cpi_montly_change_status = if_else(is.na(cpi_monthly_change), NA_character_,
if_else(cpi_monthly_change> 0, "increased",
if_else(cpi_monthly_change <0, "eased", "flat")))) %>%
mutate(ccpi_monthly_change = c(NA, diff(ccpi)),
ccpi_montly_change_status = if_else(is.na(ccpi_monthly_change), NA_character_,
if_else(ccpi_monthly_change> 0, "increased",
if_else(ccpi_monthly_change <0, "eased", "flat"))))
max(cpi_ccpi$date)
latest_data <- cpi_ccpi %>%
filter(date == max(date))
latest_data$date <- as.Date(latest_data$date)
latest_month <- latest_data[,1]
class(latest_month)
month_abbr <- format(latest_month, "%b")
latest_cpi <- latest_data[,2]
latest_ccpi <- latest_data[,3]
latest_cpi_status <- latest_data[,5]
latest_ccpi_status <- latest_data[,7]
sapply(cpi_ccpi, class)
cpi_ccpi$date <- as.Date(cpi_ccpi$date)
cpi_ccpi %>%
filter(date >="2015-01-01") %>%
select(date, cpi, ccpi) %>%
pivot_longer(cols = -date, names_to = "index", values_to = "inflation") %>%
ggplot(aes(x = date, y = inflation, color = index)) +
geom_line() +
geom_hline(aes(yintercept = 2)) +
labs(title = glue("US inflation {latest_cpi_status} in {month_abbr} to {latest_cpi}%(cpi), {latest_ccpi}%(core cpi) vs. Fed's target at 2.0%, lower than the market expected"),
x = NULL, y = "percent",
caption = "Labor Department, FRED") +
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple()
)
ggsave("us_cpi.png", height = 4, width = 5)
ggsave("/Users/takayukitamura/Documents/R_Computing/figures/us_cpi.png", height = 4, width = 5)
cpi_pce_full <- merge(cpi_ccpi, pce_cpce, by = "date")
head(cpi_pce_full)
tail(cpi_pce_full)
cpi_pce_full %>%
select(date, cpi, pce) %>%
# filter(date >= "2020-01-01") %>%
pivot_longer(cols = -date, names_to = "index", values_to = "inflation") %>%
ggplot(aes(x = date, y = inflation, color = index)) +
geom_line() +
geom_abline(slope = 0, intercept = 2) +
labs(title = "The gap between CPI and PCE is wide in this cycle",
subtitle = "Housing & related ccount for 34% in CPI, but only 15% in PCE",
caption = "Source: Department of Labor, Department of Commerce",
x = NULL, y = NULL) +
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(),
legend.title = element_blank(),
legend.key = element_rect(fill = "white")
)
cpi_pce_full %>%
select(date, cpi, pce) %>%
filter(date >= "2015-01-01") %>%
pivot_longer(cols = -date, names_to = "index", values_to = "inflation") %>%
ggplot(aes(x = date, y = inflation, color = index)) +
geom_line() +
geom_abline(slope = 0, intercept = 2) +
labs(title = glue("US inflation {latest_pce_status } in {month_abbr}(guaged by PCE, which is used primarily for macroeconomic analysis and forecast) to {latest_pce}, approaching to Fed's target at 2.0%"),
#subtitle = "Housing & related ccount for 34% in CPI, but only 15% in PCE",
caption = "Source: Department of Labor, Department of Commerce",
x = NULL, y = NULL) +
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(),
legend.title = element_blank(),
legend.key = element_rect(fill = "white")
)
ggsave("/Users/takayukitamura/Documents/R_Computing/figures/cpi_pce.png", height = 4.5, width = 6)
setwd("/Users/takayukitamura/Documents/R_Computing/us_employment")
library(tidyverse)
library(ggtext)
library(glue)
library(patchwork)
library(showtext)
library(scales)
## import NFP data ("PAYEMS") to 'nfp_data'
nfp_data <- read.csv("https://fred.stlouisfed.org/graph/fredgraph.csv?bgcolor=%23e1e9f0&chart_type=line&drp=0&fo=open%20sans&graph_bgcolor=%23ffffff&height=450&mode=fred&recession_bars=on&txtcolor=%23444444&ts=12&tts=12&width=1320&nt=0&thu=0&trc=0&show_legend=yes&show_axis_titles=yes&show_tooltip=yes&id=PAYEMS&scale=left&cosd=1939-01-01&coed=2024-07-01&line_color=%234572a7&link_values=false&line_style=solid&mark_type=none&mw=3&lw=2&ost=-99999&oet=99999&mma=0&fml=a&fq=Monthly&fam=avg&fgst=lin&fgsnd=2020-02-01&line_index=1&transformation=lin&vintage_date=2024-08-02&revision_date=2024-08-02&nd=1939-01-01.csv") %>%
rename_all(tolower) %>%
rename("nfp"=payems)
head(nfp_data)
tail(nfp_data)
# Calculate month-to-month changes
nfp_data$monthly_change <- c(NA, diff(nfp_data$nfp))
head(nfp_data)
tail(nfp_data, 20)
sapply(nfp_data,class)
# Convert Date column to Date format
nfp_data$date <- as.Date(nfp_data$date, format = "%Y-%m-%d")
highlight_data <- nfp_data %>%
filter(date == max(date))
tail(nfp_data)
# Create a new variable to indicate whether it's the latest month or not
nfp_data$latest_month <- ifelse(nfp_data$date == max(nfp_data$date), TRUE, FALSE)
tail(nfp_data)
nfp_data %>%
#mutate(highlight=(date =="2024-04-01")) %>%
#filter(date >"1988-01-01" & (date < "2020-01-01" | date > "2020-10-01")) %>%
filter(date >= "2022-01-01") %>%
ggplot(aes(x = date, y = monthly_change, fill = latest_month)) +
geom_col(show.legend = FALSE) +
labs(title = "Monthly Changes in US Non-Farm Payrolls",
x = NULL,
y = "Monthly Change in NFP(x1,000)",
caption = "FRED(Federal Reserve Economic Data)") +
scale_fill_manual(breaks = c(F,T),
values = c("#AAAAAA", "#0000FF")) +
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple())
nfp_data %>%
drop_na(monthly_change) %>%
#filter(date >"1988-01-01" & (date < "2020-01-01" | date > "2020-10-01")) %>%
filter(date >= "2021-01-01") %>%
ggplot(aes(x = date, y = monthly_change, fill = latest_month)) +
geom_col(show.legend = FALSE) +
labs(title = "Monthly Changes in US Non-Farm Payrolls",
x = NULL,
y = "Monthly Change in NFP(x1,000)",
caption = "<i>FRED(Federal Reserve Economic Data)") +
scale_fill_manual(breaks = c(F,T),
values = c("#AAAAAA", "#0000FF")) +
geom_text(data = subset(nfp_data, latest_month == TRUE),
aes(label = glue("{monthly_change}")), vjust = -0.5, hjust = 0.5,
color = "blue") +
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(),
plot.caption.position = "panel",
# plot.caption = element_textbox_simple())
plot.caption = element_markdown())
ggsave("monthly_nfp.png", width = 6, height = 5)
## Just NFP data
nfp_data %>%
ggplot(aes(x = date, y = nfp, fill = latest_month)) +
geom_line() +
scale_fill_manual(values = c("grey", "blue"), guide = FALSE) + # Specify colors for latest and other months
geom_text(data = subset(nfp_data, latest_month == TRUE),
aes(label = glue("Latest: {comma(nfp)}")), vjust = -0.5, hjust = 0.85,
color = "blue") +
scale_y_continuous(limits = c(0, 170000),
breaks = seq(0, 160000, 40000),
labels =  label_comma(accuracy = 0.1)) +
labs(title = "US Non-Farm Payrolls",
y = "NFP (x 1,000)",
x = NULL)
ggsave("us_nfp.png",height = 4, width = 6 )
rm(list = ls())
